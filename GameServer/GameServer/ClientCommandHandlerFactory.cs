using ClientCommon;
using ServerFramework;

namespace GameServer;

public class ClientCommandHandlerFactory : SFHandlerFactory<short, ICommandHandler>
{
	private static ClientCommandHandlerFactory s_instance = new ClientCommandHandlerFactory();

	public static ClientCommandHandlerFactory instance => s_instance;

	private void AddHandlerType<T>(ClientCommandName commandName) where T : ICommandHandler
	{
		AddHandlerType<T>((short)commandName);
	}

	public void Init()
	{
		AddHandlerType<TestCommandHandler>(ClientCommandName.Test);
		AddHandlerType<Test2CommandHandler>(ClientCommandName.Test2);
		AddHandlerType<GetTimeCommandHandler>(ClientCommandName.GetTime);
		AddHandlerType<LoginCommandHandler>(ClientCommandName.Login);
		AddHandlerType<LobbyInfoCommandHandler>(ClientCommandName.LobbyInfo);
		AddHandlerType<HeroCreateCommandHandler>(ClientCommandName.HeroCreate);
		AddHandlerType<HeroNamingTutorialCompleteCommandHandler>(ClientCommandName.HeroNamingTutorialComplete);
		AddHandlerType<HeroNameSetCommandHandler>(ClientCommandName.HeroNameSet);
		AddHandlerType<HeroDeleteCommandHandler>(ClientCommandName.HeroDelete);
		AddHandlerType<HeroLoginCommandHandler>(ClientCommandName.HeroLogin);
		AddHandlerType<HeroInitEnterCommandHandler>(ClientCommandName.HeroInitEnter);
		AddHandlerType<HeroLogoutCommandHandler>(ClientCommandName.HeroLogout);
		AddHandlerType<HeroPositionCommandHandler>(ClientCommandName.HeroPosition);
		AddHandlerType<HeroInfoCommandHandler>(ClientCommandName.HeroInfo);
		AddHandlerType<HeroSearchCommandHandler>(ClientCommandName.HeroSearch);
		AddHandlerType<MailReceiveCommandHandler>(ClientCommandName.MailReceive);
		AddHandlerType<MailReceiveAllCommandHandler>(ClientCommandName.MailReceiveAll);
		AddHandlerType<MailDeleteCommandHandler>(ClientCommandName.MailDelete);
		AddHandlerType<MailDeleteAllCommandHandler>(ClientCommandName.MailDeleteAll);
		AddHandlerType<MainGearEquipCommandHandler>(ClientCommandName.MainGearEquip);
		AddHandlerType<MainGearUnequipCommandHandler>(ClientCommandName.MainGearUnequip);
		AddHandlerType<MainGearEnchantCommandHandler>(ClientCommandName.MainGearEnchant);
		AddHandlerType<MainGearTransitCommandHandler>(ClientCommandName.MainGearTransit);
		AddHandlerType<MainGearRefineCommandHandler>(ClientCommandName.MainGearRefine);
		AddHandlerType<MainGearRefinementApplyCommandHandler>(ClientCommandName.MainGearRefinementApply);
		AddHandlerType<MainGearDisassembleCommandHandler>(ClientCommandName.MainGearDisassemble);
		AddHandlerType<MainGearEnchantLevelSetActivateCommandHandler>(ClientCommandName.MainGearEnchantLevelSetActivate);
		AddHandlerType<SubGearEquipCommandHandler>(ClientCommandName.SubGearEquip);
		AddHandlerType<SubGearUnequipCommandHandler>(ClientCommandName.SubGearUnequip);
		AddHandlerType<SoulstoneSocketMountCommandHandler>(ClientCommandName.SoulstoneSocketMount);
		AddHandlerType<SoulstoneSocketUnmountCommandHandler>(ClientCommandName.SoulstoneSocketUnmount);
		AddHandlerType<MountedSoulstoneComposeCommandHandler>(ClientCommandName.MountedSoulstoneCompose);
		AddHandlerType<RuneSocketMountCommandHandler>(ClientCommandName.RuneSocketMount);
		AddHandlerType<RuneSocketUnmountCommandHandler>(ClientCommandName.RuneSocketUnmount);
		AddHandlerType<SubGearGradeUpCommandHandler>(ClientCommandName.SubGearGradeUp);
		AddHandlerType<SubGearLevelUpCommandHandler>(ClientCommandName.SubGearLevelUp);
		AddHandlerType<SubGearLevelUpTotallyCommandHandler>(ClientCommandName.SubGearLevelUpTotally);
		AddHandlerType<SubGearQualityUpCommandHandler>(ClientCommandName.SubGearQualityUp);
		AddHandlerType<SubGearSoulstoneLevelSetActivateCommandHandler>(ClientCommandName.SubGearSoulstoneLevelSetActivate);
		AddHandlerType<SkillLevelUpCommandHandler>(ClientCommandName.SkillLevelUp);
		AddHandlerType<SkillLevelUpTotallyCommandHandler>(ClientCommandName.SkillLevelUpTotally);
		AddHandlerType<ImmediateReviveCommandHandler>(ClientCommandName.ImmediateRevive);
		AddHandlerType<ContinentSaftyReviveCommandHandler>(ClientCommandName.ContinentSaftyRevive);
		AddHandlerType<ContinentEnterForSaftyRevivalCommandHandler>(ClientCommandName.ContinentEnterForSaftyRevival);
		AddHandlerType<PrevContinentEnterCommandHandler>(ClientCommandName.PrevContinentEnter);
		AddHandlerType<PortalEnterCommandHandler>(ClientCommandName.PortalEnter);
		AddHandlerType<PortalExitCommandHandler>(ClientCommandName.PortalExit);
		AddHandlerType<ContinentObjectInteractionStartCommandHandler>(ClientCommandName.ContinentObjectInteractionStart);
		AddHandlerType<ContinentTransmissionCommandHandler>(ClientCommandName.ContinentTransmission);
		AddHandlerType<ContinentEnterForContinentTransmissionCommandHandler>(ClientCommandName.ContinentEnterForContinentTransmission);
		AddHandlerType<ContinentSaftyAreaEnterCommandHandler>(ClientCommandName.ContinentSaftyAreaEnter);
		AddHandlerType<ContinentEnterForContinentBanishedCommandHandler>(ClientCommandName.ContinentEnterForContinentBanished);
		AddHandlerType<MainQuestAcceptCommandHandler>(ClientCommandName.MainQuestAccept);
		AddHandlerType<MainQuestCompleteCommandHandler>(ClientCommandName.MainQuestComplete);
		AddHandlerType<TreatOfFarmQuestAcceptCommandHandler>(ClientCommandName.TreatOfFarmQuestAccept);
		AddHandlerType<TreatOfFarmQuestCompleteCommandHandler>(ClientCommandName.TreatOfFarmQuestComplete);
		AddHandlerType<TreatOfFarmQuestMissionAcceptCommandHandler>(ClientCommandName.TreatOfFarmQuestMissionAccept);
		AddHandlerType<TreatOfFarmQuestMissionAbandonCommandHandler>(ClientCommandName.TreatOfFarmQuestMissionAbandon);
		AddHandlerType<BountyHunterQuestScrollUseCommandHandler>(ClientCommandName.BountyHunterQuestScrollUse);
		AddHandlerType<BountyHunterQuestAbandonCommandHandler>(ClientCommandName.BountyHunterQuestAbandon);
		AddHandlerType<BountyHunterQuestCompleteCommandHandler>(ClientCommandName.BountyHunterQuestComplete);
		AddHandlerType<FishingBaitUseCommandHandler>(ClientCommandName.FishingBaitUse);
		AddHandlerType<FishingStartCommandHandler>(ClientCommandName.FishingStart);
		AddHandlerType<SimpleShopBuyCommandHandler>(ClientCommandName.SimpleShopBuy);
		AddHandlerType<SimpleShopSellCommandHandler>(ClientCommandName.SimpleShopSell);
		AddHandlerType<InventorySlotExtendCommandHandler>(ClientCommandName.InventorySlotExtend);
		AddHandlerType<ItemComposeCommandHandler>(ClientCommandName.ItemCompose);
		AddHandlerType<ItemComposeTotallyCommandHandler>(ClientCommandName.ItemComposeTotally);
		AddHandlerType<HpPotionUseCommandHandler>(ClientCommandName.HpPotionUse);
		AddHandlerType<ReturnScrollUseCommandHandler>(ClientCommandName.ReturnScrollUse);
		AddHandlerType<ContinentEnterForReturnScrollUseCommandHandler>(ClientCommandName.ContinentEnterForReturnScrollUse);
		AddHandlerType<MainGearBoxUseCommandHandler>(ClientCommandName.MainGearBoxUse);
		AddHandlerType<PickBoxUseCommandHandler>(ClientCommandName.PickBoxUse);
		AddHandlerType<ExpPotionUseCommandHandler>(ClientCommandName.ExpPotionUse);
		AddHandlerType<ExpScrollUseCommandHandler>(ClientCommandName.ExpScrollUse);
		AddHandlerType<TitleItemUseCommandHandler>(ClientCommandName.TitleItemUse);
		AddHandlerType<GoldItemUseCommandHandler>(ClientCommandName.GoldItemUse);
		AddHandlerType<OwnDiaItemUseCommandHandler>(ClientCommandName.OwnDiaItemUse);
		AddHandlerType<HonorPointItemUseCommandHandler>(ClientCommandName.HonorPointItemUse);
		AddHandlerType<ExploitPointItemUseCommandHandler>(ClientCommandName.ExploitPointItemUse);
		AddHandlerType<WingItemUseCommandHandler>(ClientCommandName.WingItemUse);
		AddHandlerType<StarEssenseItemUseCommandHandler>(ClientCommandName.StarEssenseItemUse);
		AddHandlerType<PremiumStarEssenseItemUseCommandHandler>(ClientCommandName.PremiumStarEssenseItemUse);
		AddHandlerType<RestRewardReceiveFreeCommandHandler>(ClientCommandName.RestRewardReceiveFree);
		AddHandlerType<RestRewardReceiveGoldCommandHandler>(ClientCommandName.RestRewardReceiveGold);
		AddHandlerType<RestRewardReceiveDiaCommandHandler>(ClientCommandName.RestRewardReceiveDia);
		AddHandlerType<PartySurroundingHeroListCommandHandler>(ClientCommandName.PartySurroundingHeroList);
		AddHandlerType<PartySurroundingPartyListCommandHandler>(ClientCommandName.PartySurroundingPartyList);
		AddHandlerType<PartyCreateCommandHandler>(ClientCommandName.PartyCreate);
		AddHandlerType<PartyExitCommandHandler>(ClientCommandName.PartyExit);
		AddHandlerType<PartyMasterChangeCommandHandler>(ClientCommandName.PartyMasterChange);
		AddHandlerType<PartyMemberBanishCommandHandler>(ClientCommandName.PartyMemberBanish);
		AddHandlerType<PartyCallCommandHandler>(ClientCommandName.PartyCall);
		AddHandlerType<PartyDisbandCommandHandler>(ClientCommandName.PartyDisband);
		AddHandlerType<PartyApplyCommandHandler>(ClientCommandName.PartyApply);
		AddHandlerType<PartyApplicationAcceptCommandHandler>(ClientCommandName.PartyApplicationAccept);
		AddHandlerType<PartyApplicationRefuseCommandHandler>(ClientCommandName.PartyApplicationRefuse);
		AddHandlerType<PartyInviteCommandHandler>(ClientCommandName.PartyInvite);
		AddHandlerType<PartyInvitationAcceptCommandHandler>(ClientCommandName.PartyInvitationAccept);
		AddHandlerType<PartyInvitationRefuseCommandHandler>(ClientCommandName.PartyInvitationRefuse);
		AddHandlerType<ChattingMessageSendCommandHandler>(ClientCommandName.ChattingMessageSend);
		AddHandlerType<LevelUpRewardReceiveCommandHnadler>(ClientCommandName.LevelUpRewardReceive);
		AddHandlerType<DailyAccessTimeRewardReceiveCommandHandler>(ClientCommandName.DailyAccessTimeRewardReceive);
		AddHandlerType<AttendRewardReceiveCommandHandler>(ClientCommandName.AttendRewardReceive);
		AddHandlerType<SeriesMissionRewardReceiveCommandHandler>(ClientCommandName.SeriesMissionRewardReceive);
		AddHandlerType<TodayMissionRewardReceiveCommandHandler>(ClientCommandName.TodayMissionRewardReceive);
		AddHandlerType<TodayMissionTutorialStartCommandHandler>(ClientCommandName.TodayMissionTutorialStart);
		AddHandlerType<AttainmentRewardReceiveCommandHandler>(ClientCommandName.AttainmentRewardReceive);
		AddHandlerType<ContinentExitForMainQuestDungeonEnterCommandHandler>(ClientCommandName.ContinentExitForMainQuestDungeonEnter);
		AddHandlerType<MainQuestDungeonEnterCommandHandler>(ClientCommandName.MainQuestDungeonEnter);
		AddHandlerType<MainQuestDungeonAbandonCommandHandler>(ClientCommandName.MainQuestDungeonAbandon);
		AddHandlerType<MainQuestDungeonExitCommandHandler>(ClientCommandName.MainQuestDungeonExit);
		AddHandlerType<MainQuestDungeonSaftyReviveCommandHandler>(ClientCommandName.MainQuestDungeonSaftyRevive);
		AddHandlerType<MountEquipCommandHandler>(ClientCommandName.MountEquip);
		AddHandlerType<MountGearEquipCommandHandler>(ClientCommandName.MountGearEquip);
		AddHandlerType<MountGearUnequipCommandHandler>(ClientCommandName.MountGearUnequip);
		AddHandlerType<MountLevelUpCommandHandler>(ClientCommandName.MountLevelUp);
		AddHandlerType<MountGearRefineCommandHandler>(ClientCommandName.MountGearRefine);
		AddHandlerType<MountGearPickBoxMakeCommandHandler>(ClientCommandName.MountGearPickBoxMake);
		AddHandlerType<MountGearPickBoxMakeTotallyCommandHandler>(ClientCommandName.MountGearPickBoxMakeTotally);
		AddHandlerType<MountGetOnCommandHandler>(ClientCommandName.MountGetOn);
		AddHandlerType<MountAwakeningLevelUpCommandHandler>(ClientCommandName.MountAwakeningLevelUp);
		AddHandlerType<MountAttrPotionUseCommandHandler>(ClientCommandName.MountAttrPotionUse);
		AddHandlerType<MountItemUseCommandHandler>(ClientCommandName.MountItemUse);
		AddHandlerType<WingEquipCommandHandler>(ClientCommandName.WingEquip);
		AddHandlerType<WingEnchantCommandHandler>(ClientCommandName.WingEnchant);
		AddHandlerType<WingEnchantTotallyCommandHandler>(ClientCommandName.WingEnchantTotally);
		AddHandlerType<WingMemoryPieceInstallCommandHandler>(ClientCommandName.WingMemoryPieceInstall);
		AddHandlerType<ContinentExitForStoryDungeonEnterCommandHandler>(ClientCommandName.ContinentExitForStoryDungeonEnter);
		AddHandlerType<StoryDungeonEnterCommandHandler>(ClientCommandName.StoryDungeonEnter);
		AddHandlerType<StoryDungeonAbandonCommandHandler>(ClientCommandName.StoryDungeonAbandon);
		AddHandlerType<StoryDungeonExitCommandHandler>(ClientCommandName.StoryDungeonExit);
		AddHandlerType<StoryDungeonReviveCommandHandler>(ClientCommandName.StoryDungeonRevive);
		AddHandlerType<StoryDungeonSweepCommandHandler>(ClientCommandName.StoryDungeonSweep);
		AddHandlerType<StoryDungeonMonsterTameCommandHandler>(ClientCommandName.StoryDungeonMonsterTame);
		AddHandlerType<ContinentExitForExpDungeonEnterCommandHandler>(ClientCommandName.ContinentExitForExpDungeonEnter);
		AddHandlerType<ExpDungeonEnterCommandHandler>(ClientCommandName.ExpDungeonEnter);
		AddHandlerType<ExpDungeonAbandonCommandHandler>(ClientCommandName.ExpDungeonAbandon);
		AddHandlerType<ExpDungeonExitCommandHandler>(ClientCommandName.ExpDungeonExit);
		AddHandlerType<ExpDungeonReviveCommandHandler>(ClientCommandName.ExpDungeonRevive);
		AddHandlerType<ExpDungeonSweepCommandHandler>(ClientCommandName.ExpDungeonSweep);
		AddHandlerType<ContinentExitForGoldDungeonEnterCommandHandler>(ClientCommandName.ContinentExitForGoldDungeonEnter);
		AddHandlerType<GoldDungeonEnterCommandHandler>(ClientCommandName.GoldDungeonEnter);
		AddHandlerType<GoldDungeonAbandonCommandHandler>(ClientCommandName.GoldDungeonAbandon);
		AddHandlerType<GoldDungeonExitCommandHandler>(ClientCommandName.GoldDungeonExit);
		AddHandlerType<GoldDungeonReviveCommandHandler>(ClientCommandName.GoldDungeonRevive);
		AddHandlerType<GoldDungeonSweepCommandHandler>(ClientCommandName.GoldDungeonSweep);
		AddHandlerType<NationTransmissionCommandHandler>(ClientCommandName.NationTransmission);
		AddHandlerType<ContinentEnterForNationTransmissionCommandHandler>(ClientCommandName.ContinentEnterForNationTransmission);
		AddHandlerType<NationDonateCommandHandler>(ClientCommandName.NationDonate);
		AddHandlerType<ContinentExitForUndergroundMazeEnterCommandHandler>(ClientCommandName.ContinentExitForUndergroundMazeEnter);
		AddHandlerType<UndergroundMazeEnterCommandHandler>(ClientCommandName.UndergroundMazeEnter);
		AddHandlerType<UndergroundMazeExitCommandHandler>(ClientCommandName.UndergroundMazeExit);
		AddHandlerType<UndergroundMazeTransmissionCommandHandler>(ClientCommandName.UndergroundMazeTransmission);
		AddHandlerType<UndergroundMazeEnterForTransmissionCommandHandler>(ClientCommandName.UndergroundMazeEnterForTransmission);
		AddHandlerType<UndergroundMazePortalEnterCommandHandler>(ClientCommandName.UndergroundMazePortalEnter);
		AddHandlerType<UndergroundMazePortalExitCommandHandler>(ClientCommandName.UndergroundMazePortalExit);
		AddHandlerType<UndergroundMazeReviveCommandHandler>(ClientCommandName.UndergroundMazeRevive);
		AddHandlerType<UndergroundMazeEnterForUndergroundMazeReviveCommandHandler>(ClientCommandName.UndergroundMazeEnterForUndergroundMazeRevive);
		AddHandlerType<ContinentExitForArtifactRoomEnterCommandHandler>(ClientCommandName.ContinentExitForArtifactRoomEnter);
		AddHandlerType<ArtifactRoomEnterCommandHandler>(ClientCommandName.ArtifactRoomEnter);
		AddHandlerType<ArtifactRoomAbandonCommandHandler>(ClientCommandName.ArtifactRoomAbandon);
		AddHandlerType<ArtifactRoomExitCommandHandler>(ClientCommandName.ArtifactRoomExit);
		AddHandlerType<ArtifactRoomNextFloorChallengeCommandHandler>(ClientCommandName.ArtifactRoomNextFloorChallenge);
		AddHandlerType<ArtifactRoomInitCommandHandler>(ClientCommandName.ArtifactRoomInit);
		AddHandlerType<ArtifactRoomSweepCommandHandler>(ClientCommandName.ArtifactRoomSweep);
		AddHandlerType<ArtifactRoomSweepAccelerateCommadHandler>(ClientCommandName.ArtifactRoomSweepAccelerate);
		AddHandlerType<ArtifactRoomSweepStopCommandHandler>(ClientCommandName.ArtifactRoomSweepStop);
		AddHandlerType<ArtifactRoomSweepCompleteCommandHandler>(ClientCommandName.ArtifactRoomSweepComplete);
		AddHandlerType<MysteryBoxQuestAcceptCommandHandler>(ClientCommandName.MysteryBoxQuestAccept);
		AddHandlerType<MysteryBoxQuestCompleteCommandHandler>(ClientCommandName.MysteryBoxQuestComplete);
		AddHandlerType<MysteryBoxPickStartCommandHandler>(ClientCommandName.MysteryBoxPickStart);
		AddHandlerType<SecretLetterQuestAcceptCommandHandler>(ClientCommandName.SecretLetterQuestAccept);
		AddHandlerType<SecretLetterQuestCompleteCommandHandler>(ClientCommandName.SecretLetterQuestComplete);
		AddHandlerType<SecretLetterPickStartCommandHandler>(ClientCommandName.SecretLetterPickStart);
		AddHandlerType<DimensionRaidQuestAcceptCommandHandler>(ClientCommandName.DimensionRaidQuestAccept);
		AddHandlerType<DimensionRaidQuestCompleteCommandHandler>(ClientCommandName.DimensionRaidQuestComplete);
		AddHandlerType<DimensionRaidInteractionStartCommandHandler>(ClientCommandName.DimensionRaidInteractionStart);
		AddHandlerType<HolyWarQuestAcceptCommandHandler>(ClientCommandName.HolyWarQuestAccept);
		AddHandlerType<HolyWarQuestCompleteCommandHandler>(ClientCommandName.HolyWarQuestComplete);
		AddHandlerType<AchievementRewardReceiveCommandHandler>(ClientCommandName.AchievementRewardReceive);
		AddHandlerType<AncientRelicMatchingStartCommandHandler>(ClientCommandName.AncientRelicMatchingStart);
		AddHandlerType<AncientRelicMatchingCancelCommandHandler>(ClientCommandName.AncientRelicMatchingCancel);
		AddHandlerType<AncientRelicEnterCommandHandler>(ClientCommandName.AncientRelicEnter);
		AddHandlerType<AncientRelicAbandonCommandHandler>(ClientCommandName.AncientRelicAbandon);
		AddHandlerType<AncientRelicExitCommandHandler>(ClientCommandName.AncientRelicExit);
		AddHandlerType<AncientRelicReviveCommandHandler>(ClientCommandName.AncientRelicRevive);
		AddHandlerType<VipLevelRewardReceiveCommandHandler>(ClientCommandName.VipLevelRewardReceive);
		AddHandlerType<RankAcquireCommandHandler>(ClientCommandName.RankAcquire);
		AddHandlerType<RankRewardReceiveCommandHandler>(ClientCommandName.RankRewardReceive);
		AddHandlerType<RankActiveSkillSelectCommandHandler>(ClientCommandName.RankActiveSkillSelect);
		AddHandlerType<RankActiveSkillLevelUpCommandHandler>(ClientCommandName.RankActiveSkillLevelUp);
		AddHandlerType<RankPassiveSkillLevelUpCommandHandler>(ClientCommandName.RankPassiveSkillLevelUp);
		AddHandlerType<HonorShopProductBuyCommandHandler>(ClientCommandName.HonorShopProductBuy);
		AddHandlerType<ServerBattlePowerRankingCommandHandler>(ClientCommandName.ServerBattlePowerRanking);
		AddHandlerType<ServerLevelRankingCommandHandler>(ClientCommandName.ServerLevelRanking);
		AddHandlerType<ServerJobBattlePowerRankingCommandHandler>(ClientCommandName.ServerJobBattlePowerRanking);
		AddHandlerType<ServerGuildRankingCommandHandler>(ClientCommandName.ServerGuildRanking);
		AddHandlerType<ServerIllustratedBookRankingCommandHandler>(ClientCommandName.ServerIllustratedBookRanking);
		AddHandlerType<ServerCreatureCardRankingCommandHandler>(ClientCommandName.ServerCreatureCardRanking);
		AddHandlerType<NationBattlePowerRankingCommandHandler>(ClientCommandName.NationBattlePowerRanking);
		AddHandlerType<NationExploitPointRankingCommandHandler>(ClientCommandName.NationExploitPointRanking);
		AddHandlerType<NationGuildRankingCommandHandler>(ClientCommandName.NationGuildRanking);
		AddHandlerType<ServerLevelRankingRewardReceiveCommandHandler>(ClientCommandName.ServerLevelRankingRewardReceive);
		AddHandlerType<DistortionScrollUseCommandHandler>(ClientCommandName.DistortionScrollUse);
		AddHandlerType<DistortionCancelCommandHandler>(ClientCommandName.DistortionCancel);
		AddHandlerType<CartGetOnCommandHandler>(ClientCommandName.CartGetOn);
		AddHandlerType<CartGetOffCommandHandler>(ClientCommandName.CartGetOff);
		AddHandlerType<CartAccelerateCommandHandler>(ClientCommandName.CartAccelerate);
		AddHandlerType<CartPortalEnterCommandHandler>(ClientCommandName.CartPortalEnter);
		AddHandlerType<CartPortalExitCommandHandler>(ClientCommandName.CartPortalExit);
		AddHandlerType<FieldOfHonorInfoCommandHandler>(ClientCommandName.FieldOfHonorInfo);
		AddHandlerType<FieldOfHonorTopRankingListCommandHandler>(ClientCommandName.FieldOfHonorTopRankingList);
		AddHandlerType<ContinentExitForFieldOfHonorChallengeCommandHandler>(ClientCommandName.ContinentExitForFieldOfHonorChallenge);
		AddHandlerType<FieldOfHonorChallengeCommandHandler>(ClientCommandName.FieldOfHonorChallenge);
		AddHandlerType<FieldOfHonorAbandonCommandHandler>(ClientCommandName.FieldOfHonorAbandon);
		AddHandlerType<FieldOfHonorExitCommandHandler>(ClientCommandName.FieldOfHonorExit);
		AddHandlerType<FieldOfHonorRankingRewardReceiveCommandHandler>(ClientCommandName.FieldOfHonorRankingRewardReceive);
		AddHandlerType<FieldOfHonorRankerInfoCommandHandler>(ClientCommandName.FieldOfHonorRankerInfo);
		AddHandlerType<GuildCreateCommandHandler>(ClientCommandName.GuildCreate);
		AddHandlerType<GuildListCommandHandler>(ClientCommandName.GuildList);
		AddHandlerType<GuildApplyCommandHandler>(ClientCommandName.GuildApply);
		AddHandlerType<GuildExitCommandHandler>(ClientCommandName.GuildExit);
		AddHandlerType<GuildInviteCommandHandler>(ClientCommandName.GuildInvite);
		AddHandlerType<GuildNoticeSetCommandHandler>(ClientCommandName.GuildNoticeSet);
		AddHandlerType<GuildDonateCommnadHandler>(ClientCommandName.GuildDonate);
		AddHandlerType<GuildDailyRewardReceiveCommandHandler>(ClientCommandName.GuildDailyRewardReceive);
		AddHandlerType<GuildMemberTabInfoCommandHandler>(ClientCommandName.GuildMemberTabInfo);
		AddHandlerType<GuildMemberBanishCommandHandler>(ClientCommandName.GuildMemberBanish);
		AddHandlerType<GuildAppointCommandHandler>(ClientCommandName.GuildAppoint);
		AddHandlerType<GuildMasterTransferCommandHandler>(ClientCommandName.GuildMasterTransfer);
		AddHandlerType<GuildApplicationListCommandHandler>(ClientCommandName.GuildApplicationList);
		AddHandlerType<GuildApplicationAcceptCommandHandler>(ClientCommandName.GuildApplicationAccept);
		AddHandlerType<GuildApplicationRefuseCommandHandler>(ClientCommandName.GuildApplicationRefuse);
		AddHandlerType<GuildInvitationAcceptCommandHandler>(ClientCommandName.GuildInvitationAccept);
		AddHandlerType<GuildInvitationRefuseCommandHandler>(ClientCommandName.GuildInvitationRefuse);
		AddHandlerType<ContinentExitForGuildTerritoryEnterCommandHandler>(ClientCommandName.ContinentExitForGuildTerritoryEnter);
		AddHandlerType<GuildTerritoryEnterCommandHandler>(ClientCommandName.GuildTerritoryEnter);
		AddHandlerType<GuildTerritoryExitCommandHandler>(ClientCommandName.GuildTerritoryExit);
		AddHandlerType<GuildTerritoryReviveCommandHandler>(ClientCommandName.GuildTerritoryRevive);
		AddHandlerType<GuildTerritoryEnterForGuildTerritoryRevivalCommandHandler>(ClientCommandName.GuildTerritoryEnterForGuildTerritoryRevival);
		AddHandlerType<GuildBuildingLevelUpCommandHandler>(ClientCommandName.GuildBuildingLevelUp);
		AddHandlerType<GuildSkillLevelUpCommandHandler>(ClientCommandName.GuildSkillLevelUp);
		AddHandlerType<SupplySupportQuestAcceptCommandHandler>(ClientCommandName.SupplySupportQuestAccept);
		AddHandlerType<SupplySupportQuestCompleteCommandHandler>(ClientCommandName.SupplySupportQuestComplete);
		AddHandlerType<SupplySupportQuestCartChangeCommandHandler>(ClientCommandName.SupplySupportQuestCartChange);
		AddHandlerType<GuildFarmQuestAcceptCommandHandler>(ClientCommandName.GuildFarmQuestAccept);
		AddHandlerType<GuildFarmQuestCompleteCommandHandler>(ClientCommandName.GuildFarmQuestComplete);
		AddHandlerType<GuildFarmQuestInteractionStartCommandHandler>(ClientCommandName.GuildFarmQuestInteractionStart);
		AddHandlerType<GuildFarmQuestAbandonCommandHandler>(ClientCommandName.GuildFarmQuestAbandon);
		AddHandlerType<GuildFoodWarehouseInfoCommandHandler>(ClientCommandName.GuildFoodWarehouseInfo);
		AddHandlerType<GuildFoodWarehouseStockCommandHandler>(ClientCommandName.GuildFoodWarehouseStock);
		AddHandlerType<GuildFoodWarehouseCollectCommandHandler>(ClientCommandName.GuildFoodWarehouseCollect);
		AddHandlerType<GuildFoodWarehouseRewardReceiveCommandHandler>(ClientCommandName.GuildFoodWarehouseRewardReceive);
		AddHandlerType<GuildAltarDonateCommandHandler>(ClientCommandName.GuildAltarDonate);
		AddHandlerType<GuildAltarSpellInjectionMissionStartCommandHandler>(ClientCommandName.GuildAltarSpellInjectionMissionStart);
		AddHandlerType<GuildAltarDefenseMissionStartCommandHandler>(ClientCommandName.GuildAltarDefenseMissionStart);
		AddHandlerType<GuildAltarRewardReceiveCommandHandler>(ClientCommandName.GuildAltarRewardReceive);
		AddHandlerType<GuildMissionQuestAcceptCommandHandler>(ClientCommandName.GuildMissionQuestAccept);
		AddHandlerType<GuildMissionAcceptCommandHandler>(ClientCommandName.GuildMissionAccept);
		AddHandlerType<GuildMissionAbandonCommandHandler>(ClientCommandName.GuildMissionAbandon);
		AddHandlerType<GuildMissionTargetNpcInteractCommandHandler>(ClientCommandName.GuildMissionTargetNpcInteract);
		AddHandlerType<GuildCallCommandHandler>(ClientCommandName.GuildCall);
		AddHandlerType<GuildCallTransmissionCommandHandler>(ClientCommandName.GuildCallTransmission);
		AddHandlerType<ContinentEnterForGuildCallTransmissionCommandHandler>(ClientCommandName.ContinentEnterForGuildCallTransmission);
		AddHandlerType<GuildSupplySupportQuestAcceptCommandHandler>(ClientCommandName.GuildSupplySupportQuestAccept);
		AddHandlerType<GuildSupplySupportQuestCompleteCommandHandler>(ClientCommandName.GuildSupplySupportQuestComplete);
		AddHandlerType<GuildHuntingQuestAcceptCommandHandler>(ClientCommandName.GuildHuntingQuestAccept);
		AddHandlerType<GuildHuntingQuestAbandonCommandHandler>(ClientCommandName.GuildHuntingQuestAbandon);
		AddHandlerType<GuildHuntingQuestCompleteCommandHandler>(ClientCommandName.GuildHuntingQuestComplete);
		AddHandlerType<GuildHuntingDonateCommandHandler>(ClientCommandName.GuildHuntingDonate);
		AddHandlerType<GuildHuntingDonationRewardReceiveCommandHandler>(ClientCommandName.GuildHuntingDonationRewardReceive);
		AddHandlerType<GuildDailyObjectiveNoticeCommandHandler>(ClientCommandName.GuildDailyObjectiveNotice);
		AddHandlerType<GuildDailyObjectiveRewardReceiveCommandHandler>(ClientCommandName.GuildDailyObjectiveRewardReceive);
		AddHandlerType<GuildDailyObjectiveCompletionMemberListCommandHandler>(ClientCommandName.GuildDailyObjectiveCompletionMemberList);
		AddHandlerType<GuildWeeklyObjectiveSetCommandHandler>(ClientCommandName.GuildWeeklyObjectiveSet);
		AddHandlerType<GuildWeeklyObjectiveRewardReceiveCommandHandler>(ClientCommandName.GuildWeeklyObjectiveRewardReceive);
		AddHandlerType<NationNoblesseAppointCommandHandler>(ClientCommandName.NationNoblesseAppoint);
		AddHandlerType<NationNoblesseDismissCommandHandler>(ClientCommandName.NationNoblesseDismiss);
		AddHandlerType<NationWarDeclarationCommandHandler>(ClientCommandName.NationWarDeclaration);
		AddHandlerType<NationWarJoinCommandHandler>(ClientCommandName.NationWarJoin);
		AddHandlerType<ContinentEnterForNationWarJoinCommandHandler>(ClientCommandName.ContinentEnterForNationWarJoin);
		AddHandlerType<NationWarReviveCommandHandler>(ClientCommandName.NationWarRevive);
		AddHandlerType<ContinentEnterForNationWarReviveCommandHandler>(ClientCommandName.ContinentEnterForNationWarRevive);
		AddHandlerType<NationWarTransmissionCommandHandler>(ClientCommandName.NationWarTransmission);
		AddHandlerType<ContinentEnterForNationWarTransmissionCommandHandler>(ClientCommandName.ContinentEnterForNationWarTransmission);
		AddHandlerType<NationWarNpcTransmissionCommandHandler>(ClientCommandName.NationWarNpcTransmission);
		AddHandlerType<ContinentEnterForNationWarNpcTransmissionCommandHandler>(ClientCommandName.ContinentEnterForNationWarNpcTransmission);
		AddHandlerType<NationWarInfoCommandHandler>(ClientCommandName.NationWarInfo);
		AddHandlerType<NationWarCallCommandHandler>(ClientCommandName.NationWarCall);
		AddHandlerType<NationWarCallTransmissionCommandHandler>(ClientCommandName.NationWarCallTransmission);
		AddHandlerType<ContinentEnterForNationWarCallTransmissionCommandHandler>(ClientCommandName.ContinentEnterForNationWarCallTransmission);
		AddHandlerType<NationWarConvergingAttackCommandHandler>(ClientCommandName.NationWarConvergingAttack);
		AddHandlerType<NationWarResultCommandHandler>(ClientCommandName.NationWarResult);
		AddHandlerType<NationWarHistoryCommandHandler>(ClientCommandName.NationWarHistory);
		AddHandlerType<NationCallCommandHandler>(ClientCommandName.NationCall);
		AddHandlerType<NationCallTransmissionCommandHandler>(ClientCommandName.NationCallTransmission);
		AddHandlerType<ContinentEnterForNationCallTransmissionCommandHandler>(ClientCommandName.ContinentEnterForNationCallTransmission);
		AddHandlerType<SoulCoveterMatchingStartCommandHandler>(ClientCommandName.SoulCoveterMatchingStart);
		AddHandlerType<SoulCoveterMatchingCancelCommandHandler>(ClientCommandName.SoulCoveterMatchingCancel);
		AddHandlerType<SoulCoveterEnterCommandHandler>(ClientCommandName.SoulCoveterEnter);
		AddHandlerType<SoulCoveterAbandonCommandHandler>(ClientCommandName.SoulCoveterAbandon);
		AddHandlerType<SoulCoveterExitCommandHandler>(ClientCommandName.SoulCoveterExit);
		AddHandlerType<SoulCoveterReviveCommandHandler>(ClientCommandName.SoulCoveterRevive);
		AddHandlerType<IllustratedBookUseCommandHandler>(ClientCommandName.IllustratedBookUse);
		AddHandlerType<IllustratedBookExplorationStepAcquireCommandHandler>(ClientCommandName.IllustratedBookExplorationStepAcquire);
		AddHandlerType<IllustratedBookExplorationStepRewardReceiveCommandHandler>(ClientCommandName.IllustratedBookExplorationStepRewardReceive);
		AddHandlerType<SceneryQuestStartCommandHandler>(ClientCommandName.SceneryQuestStart);
		AddHandlerType<AccomplishmentRewardReceiveCommandHandler>(ClientCommandName.AccomplishmentRewardReceive);
		AddHandlerType<AccomplishmentRewardReceiveAllCommandHandler>(ClientCommandName.AccomplishmentRewardReceiveAll);
		AddHandlerType<DisplayTitleSetCommandHandler>(ClientCommandName.DisplayTitleSet);
		AddHandlerType<ActivationTitleSetCommandHandler>(ClientCommandName.ActivationTitleSet);
		AddHandlerType<CreatureCardDisassembleCommandHandler>(ClientCommandName.CreatureCardDisassemble);
		AddHandlerType<CreatureCardDisassembleAllCommandHandler>(ClientCommandName.CreatureCardDisassembleAll);
		AddHandlerType<CreatureCardComposeCommandHandler>(ClientCommandName.CreatureCardCompose);
		AddHandlerType<CreatureCardCollectionActivateCommandHandler>(ClientCommandName.CreatureCardCollectionActivate);
		AddHandlerType<CreatureCardShopFixedProductBuyCommandHandler>(ClientCommandName.CreatureCardShopFixedProductBuy);
		AddHandlerType<CreatureCardShopRandomProductBuyCommandHandler>(ClientCommandName.CreatureCardShopRandomProductBuy);
		AddHandlerType<CreatureCardShopPaidRefreshCommandHandler>(ClientCommandName.CreatureCardShopPaidRefresh);
		AddHandlerType<ContinentExitForEliteDungeonEnterCommandHandler>(ClientCommandName.ContinentExitForEliteDungeonEnter);
		AddHandlerType<EliteDungeonEnterCommandHandler>(ClientCommandName.EliteDungeonEnter);
		AddHandlerType<EliteDungeonAbandonCommandHandler>(ClientCommandName.EliteDungeonAbandon);
		AddHandlerType<EliteDungeonExitCommandHandler>(ClientCommandName.EliteDungeonExit);
		AddHandlerType<EliteDungeonReviveCommandHandler>(ClientCommandName.EliteDungeonRevive);
		AddHandlerType<StaminaBuyCommandHandler>(ClientCommandName.StaminaBuy);
		AddHandlerType<BattleSettingSetCommandHandler>(ClientCommandName.BattleSettingSet);
		AddHandlerType<ProofOfValorRefreshCommandHandler>(ClientCommandName.ProofOfValorRefresh);
		AddHandlerType<ContinentExitForProofOfValorEnterCommandHandler>(ClientCommandName.ContinentExitForProofOfValorEnter);
		AddHandlerType<ProofOfValorEnterCommandHandler>(ClientCommandName.ProofOfValorEnter);
		AddHandlerType<ProofOfValorAbandonCommandHandler>(ClientCommandName.ProofOfValorAbandon);
		AddHandlerType<ProofOfValorExitCommandHandler>(ClientCommandName.ProofOfValorExit);
		AddHandlerType<ProofOfValorSweepCommandHandler>(ClientCommandName.ProofOfValorSweep);
		AddHandlerType<ProofOfValorBuffBoxAcquireCommandHandler>(ClientCommandName.ProofOfValorBuffBoxAcquire);
		AddHandlerType<GroggyMonsterItemStealStartCommandHandler>(ClientCommandName.GroggyMonsterItemStealStart);
		AddHandlerType<NpcShopProductBuyCommandHandler>(ClientCommandName.NpcShopProductBuy);
		AddHandlerType<RookieGiftReceiveCommandHandler>(ClientCommandName.RookieGiftReceive);
		AddHandlerType<OpenGiftReceiveCommandHandler>(ClientCommandName.OpenGiftReceive);
		AddHandlerType<DailyQuestAcceptCommandHandler>(ClientCommandName.DailyQuestAccept);
		AddHandlerType<DailyQuestCompleteCommandHandler>(ClientCommandName.DailyQuestComplete);
		AddHandlerType<DailyQuestRefreshCommandHandler>(ClientCommandName.DailyQuestRefresh);
		AddHandlerType<DailyQuestMissionImmediatlyCompleteCommandHandler>(ClientCommandName.DailyQuestMissionImmediatlyComplete);
		AddHandlerType<DailyQuestAbandonCommandHandler>(ClientCommandName.DailyQuestAbandon);
		AddHandlerType<WeeklyQuestRoundAcceptCommandHandler>(ClientCommandName.WeeklyQuestRoundAccept);
		AddHandlerType<WeeklyQuestRoundImmediatlyCompleteCommandHandler>(ClientCommandName.WeeklyQuestRoundImmediatlyComplete);
		AddHandlerType<WeeklyQuestTenRoundImmediatlyCompleteCommandHandler>(ClientCommandName.WeeklyQuestTenRoundImmediatlyComplete);
		AddHandlerType<WeeklyQuestRoundRefreshCommandHandler>(ClientCommandName.WeeklyQuestRoundRefresh);
		AddHandlerType<WeeklyQuestRoundMoveMissionCompleteCommandHandler>(ClientCommandName.WeeklyQuestRoundMoveMissionComplete);
		AddHandlerType<ContinentExitForWisdomTempleEnterCommandHandler>(ClientCommandName.ContinentExitForWisdomTempleEnter);
		AddHandlerType<WisdomTempleEnterCommandHandler>(ClientCommandName.WisdomTempleEnter);
		AddHandlerType<WisdomTempleAbandonCommandHandler>(ClientCommandName.WisdomTempleAbandon);
		AddHandlerType<WisdomTempleExitCommandHandler>(ClientCommandName.WisdomTempleExit);
		AddHandlerType<WisdomTempleColorMatchingObjectInteractionStartCommandHandler>(ClientCommandName.WisdomTempleColorMatchingObjectInteractionStart);
		AddHandlerType<WisdomTempleColorMatchingObjectCheckCommandHandler>(ClientCommandName.WisdomTempleColorMatchingObjectCheck);
		AddHandlerType<WisdomTemplePuzzleRewardObjectInteractionStartCommandHandler>(ClientCommandName.WisdomTemplePuzzleRewardObjectInteractionStart);
		AddHandlerType<WisdomTempleSweepCommandHandler>(ClientCommandName.WisdomTempleSweep);
		AddHandlerType<Open7DayEventMissionRewardReceiveCommandHandler>(ClientCommandName.Open7DayEventMissionRewardReceive);
		AddHandlerType<Open7DayEventProductBuyCommandHandler>(ClientCommandName.Open7DayEventProductBuy);
		AddHandlerType<Open7DayEventRewardReceiveCommandHandler>(ClientCommandName.Open7DayEventRewardReceive);
		AddHandlerType<RetrieveGoldCommandHandler>(ClientCommandName.RetrieveGold);
		AddHandlerType<RetrieveGoldAllCommandHandler>(ClientCommandName.RetrieveGoldAll);
		AddHandlerType<RetrieveDiaCommandHandler>(ClientCommandName.RetrieveDia);
		AddHandlerType<RetrieveDiaAllCommandHandler>(ClientCommandName.RetrieveDiaAll);
		AddHandlerType<RuinsReclaimMatchingStartCommandHandler>(ClientCommandName.RuinsReclaimMatchingStart);
		AddHandlerType<RuinsReclaimMatchingCancelCommandHandler>(ClientCommandName.RuinsReclaimMatchingCancel);
		AddHandlerType<RuinsReclaimEnterCommandHandler>(ClientCommandName.RuinsReclaimEnter);
		AddHandlerType<RuinsReclaimExitCommandHandler>(ClientCommandName.RuinsReclaimExit);
		AddHandlerType<RuinsReclaimAbandonCommandHandler>(ClientCommandName.RuinsReclaimAbandon);
		AddHandlerType<RuinsReclaimPortalEnterCommandHandler>(ClientCommandName.RuinsReclaimPortalEnter);
		AddHandlerType<RuinsReclaimReviveCommandHandler>(ClientCommandName.RuinsReclaimRevive);
		AddHandlerType<RuinsReclaimMonsterTransformationCancelObjectInteractionStartCommandHandler>(ClientCommandName.RuinsReclaimMonsterTransformationCancelObjectInteractionStart);
		AddHandlerType<RuinsReclaimRewardObjectInteractionStartCommandHandler>(ClientCommandName.RuinsReclaimRewardObjectInteractionStart);
		AddHandlerType<TaskConsignmentStartCommandHandler>(ClientCommandName.TaskConsignmentStart);
		AddHandlerType<TaskConsignmentCompleteCommandHandler>(ClientCommandName.TaskConsignmentComplete);
		AddHandlerType<TaskConsignmentImmediatelyCompleteCommandHandler>(ClientCommandName.TaskConsignmentImmediatelyComplete);
		AddHandlerType<TrueHeroQuestAcceptCommandHandler>(ClientCommandName.TrueHeroQuestAccept);
		AddHandlerType<TrueHeroQuestStepInteractionStartCommandHandler>(ClientCommandName.TrueHeroQuestStepInteractionStart);
		AddHandlerType<TrueHeroQuestCompleteCommandHandler>(ClientCommandName.TrueHeroQuestComplete);
		AddHandlerType<InfiniteWarMatchingStartCommandHandler>(ClientCommandName.InfiniteWarMatchingStart);
		AddHandlerType<InfiniteWarMatchingCancelCommandHandler>(ClientCommandName.InfiniteWarMatchingCancel);
		AddHandlerType<InfiniteWarEnterCommandHandler>(ClientCommandName.InfiniteWarEnter);
		AddHandlerType<InfiniteWarExitCommandHandler>(ClientCommandName.InfiniteWarExit);
		AddHandlerType<InfiniteWarAbandonCommandHandler>(ClientCommandName.InfiniteWarAbandon);
		AddHandlerType<InfiniteWarReviveCommandHandler>(ClientCommandName.InfiniteWarRevive);
		AddHandlerType<InfiniteWarBuffBoxAcquireCommandHandler>(ClientCommandName.InfiniteWarBuffBoxAcquire);
		AddHandlerType<LimitationGiftRewardReceiveCommandHandler>(ClientCommandName.LimitationGiftRewardReceive);
		AddHandlerType<WeekendRewardSelectCommandHandler>(ClientCommandName.WeekendRewardSelect);
		AddHandlerType<WeekendRewardReceiveCommandHandler>(ClientCommandName.WeekendRewardReceive);
		AddHandlerType<WarehouseDepositCommandHandler>(ClientCommandName.WarehouseDeposit);
		AddHandlerType<WarehouseWithdrawCommandHandler>(ClientCommandName.WarehouseWithdraw);
		AddHandlerType<WarehouseSlotExtendCommandHandler>(ClientCommandName.WarehouseSlotExtend);
		AddHandlerType<DiaShopProductBuyCommandHandler>(ClientCommandName.DiaShopProductBuy);
		AddHandlerType<FearAltarMatchingStartCommandHandler>(ClientCommandName.FearAltarMatchingStart);
		AddHandlerType<FearAltarMatchingCancelCommandHandler>(ClientCommandName.FearAltarMatchingCancel);
		AddHandlerType<FearAltarEnterCommandHandler>(ClientCommandName.FearAltarEnter);
		AddHandlerType<FearAltarExitCommandHandler>(ClientCommandName.FearAltarExit);
		AddHandlerType<FearAltarAbandonCommandHandler>(ClientCommandName.FearAltarAbandon);
		AddHandlerType<FearAltarReviveCommandHandler>(ClientCommandName.FearAltarRevive);
		AddHandlerType<FearAltarHalidomElementalRewardReceiveCommandHandler>(ClientCommandName.FearAltarHalidomElementalRewardReceive);
		AddHandlerType<FearAltarHalidomCollectionRewardReceiveCommandHandler>(ClientCommandName.FearAltarHalidomCollectionRewardReceive);
		AddHandlerType<SubQuestAcceptCommandHandler>(ClientCommandName.SubQuestAccept);
		AddHandlerType<SubQuestCompleteCommandHandler>(ClientCommandName.SubQuestComplete);
		AddHandlerType<SubQuestAbandonCommandHandler>(ClientCommandName.SubQuestAbandon);
		AddHandlerType<WarMemoryMatchingStartCommandHandler>(ClientCommandName.WarMemoryMatchingStart);
		AddHandlerType<WarMemoryMatchingCancelCommandHandler>(ClientCommandName.WarMemoryMatchingCancel);
		AddHandlerType<WarMemoryEnterCommandHandler>(ClientCommandName.WarMemoryEnter);
		AddHandlerType<WarMemoryExitCommandHandler>(ClientCommandName.WarMemoryExit);
		AddHandlerType<WarMemoryAbandonCommandHandler>(ClientCommandName.WarMemoryAbandon);
		AddHandlerType<WarMemoryReviveCommandHandler>(ClientCommandName.WarMemoryRevive);
		AddHandlerType<WarMemoryTransformationObjectInteractionStartCommandHandler>(ClientCommandName.WarMemoryTransformationObjectInteractionStart);
		AddHandlerType<OrdealQuestCompleteCommandHandler>(ClientCommandName.OrdealQuestComplete);
		AddHandlerType<OrdealQuestSlotCompleteCommandHandler>(ClientCommandName.OrdealQuestSlotComplete);
		AddHandlerType<ContinentExitForOsirisRoomEnterCommandHandler>(ClientCommandName.ContinentExitForOsirisRoomEnter);
		AddHandlerType<OsirisRoomEnterCommandHandler>(ClientCommandName.OsirisRoomEnter);
		AddHandlerType<OsirisRoomExitCommandHandler>(ClientCommandName.OsirisRoomExit);
		AddHandlerType<OsirisRoomAbandonCommandHandler>(ClientCommandName.OsirisRoomAbandon);
		AddHandlerType<OsirisRoomMoneyBuffActivateCommandHandler>(ClientCommandName.OsirisRoomMoneyBuffActivate);
		AddHandlerType<FriendListCommandHandler>(ClientCommandName.FriendList);
		AddHandlerType<FriendDeleteCommandHandler>(ClientCommandName.FriendDelete);
		AddHandlerType<FriendApplyCommandHandler>(ClientCommandName.FriendApply);
		AddHandlerType<FriendApplicationAcceptCommandHandler>(ClientCommandName.FriendApplicationAccept);
		AddHandlerType<FriendApplicationRefuseCommandHandler>(ClientCommandName.FriendApplicationRefuse);
		AddHandlerType<HeroSearchForFriendApplicationCommandHandler>(ClientCommandName.HeroSearchForFriendApplication);
		AddHandlerType<BlacklistEntryAddCommandHandler>(ClientCommandName.BlacklistEntryAdd);
		AddHandlerType<BlacklistEntryDeleteCommandHandler>(ClientCommandName.BlacklistEntryDelete);
		AddHandlerType<BiographyStartCommandHandler>(ClientCommandName.BiographyStart);
		AddHandlerType<BiographyCompleteCommandHandler>(ClientCommandName.BiographyComplete);
		AddHandlerType<BiographyQuestAcceptCommandHandler>(ClientCommandName.BiographyQuestAccept);
		AddHandlerType<BiographyQuestCompleteCommandHandler>(ClientCommandName.BiographyQuestComplete);
		AddHandlerType<BiographyQuestMoveObjectiveCompleteCommandHandler>(ClientCommandName.BiographyQuestMoveObjectiveComplete);
		AddHandlerType<BiographyQuestNpcConversationCompleteCommandHandler>(ClientCommandName.BiographyQuestNpcConversationComplete);
		AddHandlerType<ContinentExitForBiographyQuestDungeonEnterCommandHandler>(ClientCommandName.ContinentExitForBiographyQuestDungeonEnter);
		AddHandlerType<BiographyQuestDungeonEnterCommandHandler>(ClientCommandName.BiographyQuestDungeonEnter);
		AddHandlerType<BiographyQuestDungeonReviveCommandHandler>(ClientCommandName.BiographyQuestDungeonRevive);
		AddHandlerType<BiographyQuestDungeonAbandonCommandHandler>(ClientCommandName.BiographyQuestDungeonAbandon);
		AddHandlerType<BiographyQuestDungeonExitCommandHandler>(ClientCommandName.BiographyQuestDungeonExit);
		AddHandlerType<ItemLuckyShopFreePickCommandHandler>(ClientCommandName.ItemLuckyShopFreePick);
		AddHandlerType<ItemLuckyShop1TimePickCommandHandler>(ClientCommandName.ItemLuckyShop1TimePick);
		AddHandlerType<ItemLuckyShop5TimePickCommandHandler>(ClientCommandName.ItemLuckyShop5TimePick);
		AddHandlerType<CreatureCardLuckyShopFreePickCommandHandler>(ClientCommandName.CreatureCardLuckyShopFreePick);
		AddHandlerType<CreatureCardLuckyShop1TimePickCommandHandler>(ClientCommandName.CreatureCardLuckyShop1TimePick);
		AddHandlerType<CreatureCardLuckyShop5TimePickCommandHandler>(ClientCommandName.CreatureCardLuckyShop5TimePick);
		AddHandlerType<BlessingQuestDeleteAllCommandHandler>(ClientCommandName.BlessingQuestDeleteAll);
		AddHandlerType<BlessingQuestBlessingSendCommandHandler>(ClientCommandName.BlessingQuestBlessingSend);
		AddHandlerType<BlessingRewardReceiveCommandHandler>(ClientCommandName.BlessingRewardReceive);
		AddHandlerType<BlessingDeleteAllCommandHandler>(ClientCommandName.BlessingDeleteAll);
		AddHandlerType<OwnerProspectQuestRewardReceiveCommandHandler>(ClientCommandName.OwnerProspectQuestRewardReceive);
		AddHandlerType<OwnerProspectQuestRewardReceiveAllCommandHandler>(ClientCommandName.OwnerProspectQuestRewardReceiveAll);
		AddHandlerType<TargetProspectQuestRewardReceiveCommandHandler>(ClientCommandName.TargetProspectQuestRewardReceive);
		AddHandlerType<TargetProspectQuestRewardReceiveAllCommandHandler>(ClientCommandName.TargetProspectQuestRewardReceiveAll);
		AddHandlerType<DragonNestMatchingStartCommandHandler>(ClientCommandName.DragonNestMatchingStart);
		AddHandlerType<DragonNestMatchingCancelCommandHandler>(ClientCommandName.DragonNestMatchingCancel);
		AddHandlerType<DragonNestEnterCommandHandler>(ClientCommandName.DragonNestEnter);
		AddHandlerType<DragonNestExitCommandHandler>(ClientCommandName.DragonNestExit);
		AddHandlerType<DragonNestAbandonCommandHandler>(ClientCommandName.DragonNestAbandon);
		AddHandlerType<DragonNestReviveCommandHandler>(ClientCommandName.DragonNestRevive);
		AddHandlerType<CreatureParticipateCommandHandler>(ClientCommandName.CreatureParticipate);
		AddHandlerType<CreatureParticipationCancelCommandHandler>(ClientCommandName.CreatureParticipationCancel);
		AddHandlerType<CreatureCheerCommandHandler>(ClientCommandName.CreatureCheer);
		AddHandlerType<CreatureCheerCancelCommandHandler>(ClientCommandName.CreatureCheerCancel);
		AddHandlerType<CreatureRearCommandHandler>(ClientCommandName.CreatureRear);
		AddHandlerType<CreatureReleaseCommandHandler>(ClientCommandName.CreatureRelease);
		AddHandlerType<CreatureInjectCommandHandler>(ClientCommandName.CreatureInject);
		AddHandlerType<CreatureInjectionRetrievalCommandHandler>(ClientCommandName.CreatureInjectionRetrieval);
		AddHandlerType<CreatureVaryCommandHandler>(ClientCommandName.CreatureVary);
		AddHandlerType<CreatureAdditionalAttrSwitchCommandHandler>(ClientCommandName.CreatureAdditionalAttrSwitch);
		AddHandlerType<CreatureSkillSlotOpenCommandHandler>(ClientCommandName.CreatureSkillSlotOpen);
		AddHandlerType<CreatureComposeCommandHandler>(ClientCommandName.CreatureCompose);
		AddHandlerType<CreatureEggUseCommandHandler>(ClientCommandName.CreatureEggUse);
		AddHandlerType<PresentSendCommandHandler>(ClientCommandName.PresentSend);
		AddHandlerType<PresentReplyCommandHandler>(ClientCommandName.PresentReply);
		AddHandlerType<ServerPresentPopularityPointRankingCommandHandler>(ClientCommandName.ServerPresentPopularityPointRanking);
		AddHandlerType<NationWeeklyPresentPopularityPointRankingCommandHandler>(ClientCommandName.NationWeeklyPresentPopularityPointRanking);
		AddHandlerType<NationWeeklyPresentPopularityPointRankingRewardReceiveCommandHandler>(ClientCommandName.NationWeeklyPresentPopularityPointRankingRewardReceive);
		AddHandlerType<ServerPresentContributionPointRankingCommandHandler>(ClientCommandName.ServerPresentContributionPointRanking);
		AddHandlerType<NationWeeklyPresentContributionPointRankingCommandHandler>(ClientCommandName.NationWeeklyPresentContributionPointRanking);
		AddHandlerType<NationWeeklyPresentContributionPointRankingRewardReceiveCommandHandler>(ClientCommandName.NationWeeklyPresentContributionPointRankingRewardReceive);
		AddHandlerType<CostumeItemUseCommandHandler>(ClientCommandName.CostumeItemUse);
		AddHandlerType<CostumeEquipCommandHandler>(ClientCommandName.CostumeEquip);
		AddHandlerType<CostumeUnequipCommandHandler>(ClientCommandName.CostumeUnequip);
		AddHandlerType<CostumeEffectApplyCommandHandler>(ClientCommandName.CostumeEffectApply);
		AddHandlerType<CostumeEnchantCommandHandler>(ClientCommandName.CostumeEnchant);
		AddHandlerType<CostumeCollectionShuffleCommandHandler>(ClientCommandName.CostumeCollectionShuffle);
		AddHandlerType<CostumeCollectionActivateCommandHandler>(ClientCommandName.CostumeCollectionActivate);
		AddHandlerType<CreatureFarmQuestAcceptCommandHandler>(ClientCommandName.CreatureFarmQuestAccept);
		AddHandlerType<CreatureFarmQuestCompleteCommandHandler>(ClientCommandName.CreatureFarmQuestComplete);
		AddHandlerType<CreatureFarmQuestMissionMoveObjectiveCompleteCommandHandler>(ClientCommandName.CreatureFarmQuestMissionMoveObjectiveComplete);
		AddHandlerType<GuildBlessingBuffStartCommandHandler>(ClientCommandName.GuildBlessingBuffStart);
		AddHandlerType<NationAllianceApplyCommandHandler>(ClientCommandName.NationAllianceApply);
		AddHandlerType<NationAllianceApplicationAcceptCommandHandler>(ClientCommandName.NationAllianceApplicationAccept);
		AddHandlerType<NationAllianceApplicationCancelCommandHandler>(ClientCommandName.NationAllianceApplicationCancel);
		AddHandlerType<NationAllianceApplicationRejectCommandHandler>(ClientCommandName.NationAllianceApplicationReject);
		AddHandlerType<NationAllianceBreakCommandHandler>(ClientCommandName.NationAllianceBreak);
		AddHandlerType<CashProductPurchaseStartCommandHandler>(ClientCommandName.CashProductPurchaseStart);
		AddHandlerType<CashProductPurchaseCancelCommandHandler>(ClientCommandName.CashProductPurchaseCancel);
		AddHandlerType<CashProductPurchaseFailCommandHandler>(ClientCommandName.CashProductPurchaseFail);
		AddHandlerType<CashProductPurchaseCompleteCommandHandler>(ClientCommandName.CashProductPurchaseComplete);
		AddHandlerType<FirstChargeEventRewardReceiveCommandHandler>(ClientCommandName.FirstChargeEventRewardReceive);
		AddHandlerType<RechargeEventRewardReceiveCommandHandler>(ClientCommandName.RechargeEventRewardReceive);
		AddHandlerType<ChargeEventMissionRewardReceiveCommandHandler>(ClientCommandName.ChargeEventMissionRewardReceive);
		AddHandlerType<DailyChargeEventMissionRewardReceiveCommandHandler>(ClientCommandName.DailyChargeEventMissionRewardReceive);
		AddHandlerType<ConsumeEventMissionRewardReceiveCommandHandler>(ClientCommandName.ConsumeEventMissionRewardReceive);
		AddHandlerType<DailyConsumeEventMissionRewardReceiveCommandHandler>(ClientCommandName.DailyConsumeEventMissionRewardReceive);
		AddHandlerType<JobChangeQuestAcceptCommandHandler>(ClientCommandName.JobChangeQuestAccept);
		AddHandlerType<JobChangeQuestCompleteCommandHandler>(ClientCommandName.JobChangeQuestComplete);
		AddHandlerType<HeroJobChangeCommandHandler>(ClientCommandName.HeroJobChange);
		AddHandlerType<HeroAttrPotionUseCommandHandler>(ClientCommandName.HeroAttrPotionUse);
		AddHandlerType<HeroAttrPotionUseAllCommandHandler>(ClientCommandName.HeroAttrPotionUseAll);
		AddHandlerType<AnkouTombMatchingStartCommandHandler>(ClientCommandName.AnkouTombMatchingStart);
		AddHandlerType<AnkouTombMatchingCancelCommandHandler>(ClientCommandName.AnkouTombMatchingCancel);
		AddHandlerType<AnkouTombEnterCommandHandler>(ClientCommandName.AnkouTombEnter);
		AddHandlerType<AnkouTombExitCommandHandler>(ClientCommandName.AnkouTombExit);
		AddHandlerType<AnkouTombAbandonCommandHandler>(ClientCommandName.AnkouTombAbandon);
		AddHandlerType<AnkouTombReviveCommandHandler>(ClientCommandName.AnkouTombRevive);
		AddHandlerType<AnkouTombMoneyBuffActivateCommandHandler>(ClientCommandName.AnkouTombMoneyBuffActivate);
		AddHandlerType<AnkouTombAdditionalRewardExpReceiveCommandHandler>(ClientCommandName.AnkouTombAdditionalRewardExpReceive);
		AddHandlerType<ConstellationEntryActivateCommandHandler>(ClientCommandName.ConstellationEntryActivate);
		AddHandlerType<ConstellationStepOpenCommandHandler>(ClientCommandName.ConstellationStepOpen);
		AddHandlerType<ArtifactLevelUpCommandHandler>(ClientCommandName.ArtifactLevelUp);
		AddHandlerType<ArtifactEquipCommandHandler>(ClientCommandName.ArtifactEquip);
		AddHandlerType<TradeShipMatchingStartCommandHandler>(ClientCommandName.TradeShipMatchingStart);
		AddHandlerType<TradeShipMatchingCancelCommandHandler>(ClientCommandName.TradeShipMatchingCancel);
		AddHandlerType<TradeShipEnterCommandHandler>(ClientCommandName.TradeShipEnter);
		AddHandlerType<TradeShipExitCommandHandler>(ClientCommandName.TradeShipExit);
		AddHandlerType<TradeShipAbandonCommandHandler>(ClientCommandName.TradeShipAbandon);
		AddHandlerType<TradeShipReviveCommandHandler>(ClientCommandName.TradeShipRevive);
		AddHandlerType<TradeShipMoneyBuffActivateCommandHandler>(ClientCommandName.TradeShipMoneyBuffActivate);
		AddHandlerType<TradeShipAdditionalRewardExpReceiveCommandHandler>(ClientCommandName.TradeShipAdditionalRewardExpReceive);
	}
}
